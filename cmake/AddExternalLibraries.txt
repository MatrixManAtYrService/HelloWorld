# Use Boost Unit Test Framework
enable_testing()
SET(BOOST_ROOT "C:/Boost")                             # FindBoost.cmake handles this on its own in the linux case
SET(BOOST_LIBRARYDIR "C:/Boost/lib")
SET(BOOST_INCLUDEDIR "C:/Boost/include/boost-1_60")
find_package(Boost 1.60.0 COMPONENTS unit_test_framework REQUIRED)
list(APPEND INCLUDE_DIRS ${Boost_INCLUDE_DIRS})

if(MSVC)                        # Microsoft uses magic to handle this
    SET(BOOST_LINK_FLAG "")
else()
    SET(BOOST_LINK_FLAG "-lboost_unit_test_framework")
endif()

SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${BOOST_LINK_FLAG}" )
MESSAGE(STATUS "boost flags: " ${BOOST_LINK_FLAG})
MESSAGE(STATUS "boost libraries: " ${Boost_LIBRARIES})

# Use SQLite3
# see ./cmake/FindSQLite3.cmake for details about where find_package looks
set(SQLITE3_FOUND False)
find_package(SQLite3)

SET(SQLITE3_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/include/sqlite3")
list(APPEND INCLUDE_DIRS ${SQLITE3_INCLUDE_DIR})
MESSAGE(STATUS "sqlite found: " ${SQLITE3_LIBRARY})

find_package(Threads REQUIRED)

